//purpose of function: retrieve data of querys, check for overlap a. assign to json objects for venn diagram
//should be integrated after query is run by clicking search button and before venn diagram production
// disComp = name of query function for specific component

function getData(disComp){

//retrieve value of drop down menu

var dis1name = document.getElementById("disease1").value, dis2name = document.getElementById("disease2").value

//output arrays for Venn diagram
let AB = new Array[any], A = new Array[any], B = new Array[any];

// dis1 a. dis2 are dummy variables, to be filled in once function to retrieve specific properties of query is done
// likely need module to retrieve needed data from query return json object

// calls retrieve function from query file, need to adjust to final names
let dis1 = query.disComp(dis1name), dis2 = query.disComp(dis2name);

// loops through data and checks if elements are identical, if true adds to AB array, if not adds to A/B respectively
// also checks if any component is doubled in the query
for(var i in dis1){
  for(var j in dis2){
    if(dis1[i] == dis2[j]){
      AB.push(dis2[j]);
    }
    else{
        if(!(B.includes(dis2[j]))){
            B.push(dis2[j]);
        }
    } 
  }
  if(!(AB.includes(dis1[i]) && A.includes(dis1[i]))){
    A.push(dis1[i]);
}
}

// construct string of items in arrays

for(var n in A){
  contDiagA += A[n]; 
  contDiagA += '\n';
} 

for(var m in B){
  contDiagB += B[m]; 
  contDiagB += '\n';
} 

for(var j in AB){
  contDiagAB += AB[j]; 
  contDiagAB += '\n';
} 

// computes relative size of the diagram parts
let AB_total = A.length + B.length + AB.length;
let A_size = Math.ceil(A.length/AB_total/10)*1000;
let B_size = Math.ceil(B.length/AB_total/10)*1000;
let AB_size = Math.ceil(AB.length/AB_total/10)*1000;


// returns the json objects thats passed to the anychart.venn function
return [
        {
          x: 'A',
          value: A_size,
          name: dis1name,
          tooltipTitle: contDiagA ,
          normal: {fill: "#8ecafb 0.7"},
          hovered: {fill: "#8ecafb 1"},
          selected: {fill: "#8ecafb 1.3"}
        },
        {
          x: 'B',
          value: B_size,
          name: dis2name,
          tooltipTitle: contDiagB,
          normal: {fill: "#ffeaa6 0.7"},
          hovered: {fill: "#ffeaa6 1"},
          selected: {fill: "#ffeaa6 1.3"}
        },
        {
          x: ['A', 'B'],
          value: AB_size,
          name: 'Overlap between ' + dis1name + ' and ' + dis2name,
          tooltipTitle: contDiagAB,
          tooltipDesc: disComp + ' associated with both ' + dis1name + ' and ' + dis2name,
          normal: {fill: "#9fdebe 0.8"},
          hovered: {fill: "#9fdebe 1"},
          selected: {fill: "#9fdebe 1.3"},
          hatchFill: {
            type:"weave",
            color: "#83c3a3"
          }    
        }
      ];
}

